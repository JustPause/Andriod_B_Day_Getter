// Generated by view binder compiler. Do not edit!
package com.example.b_daygetter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.b_daygetter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button AddUser;

  @NonNull
  public final TextView AgeWillBe;

  @NonNull
  public final TextView BDayCountdown;

  @NonNull
  public final TextView Date;

  @NonNull
  public final Button DeleteThisUser;

  @NonNull
  public final Button ListUsers;

  @NonNull
  public final ConstraintLayout MainWindow;

  @NonNull
  public final TextView UserName;

  @NonNull
  public final TextView Version;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button AddUser,
      @NonNull TextView AgeWillBe, @NonNull TextView BDayCountdown, @NonNull TextView Date,
      @NonNull Button DeleteThisUser, @NonNull Button ListUsers,
      @NonNull ConstraintLayout MainWindow, @NonNull TextView UserName, @NonNull TextView Version) {
    this.rootView = rootView;
    this.AddUser = AddUser;
    this.AgeWillBe = AgeWillBe;
    this.BDayCountdown = BDayCountdown;
    this.Date = Date;
    this.DeleteThisUser = DeleteThisUser;
    this.ListUsers = ListUsers;
    this.MainWindow = MainWindow;
    this.UserName = UserName;
    this.Version = Version;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Add_User;
      Button AddUser = ViewBindings.findChildViewById(rootView, id);
      if (AddUser == null) {
        break missingId;
      }

      id = R.id.Age_will_be;
      TextView AgeWillBe = ViewBindings.findChildViewById(rootView, id);
      if (AgeWillBe == null) {
        break missingId;
      }

      id = R.id.B_day_countdown;
      TextView BDayCountdown = ViewBindings.findChildViewById(rootView, id);
      if (BDayCountdown == null) {
        break missingId;
      }

      id = R.id.Date;
      TextView Date = ViewBindings.findChildViewById(rootView, id);
      if (Date == null) {
        break missingId;
      }

      id = R.id.Delete_this_user;
      Button DeleteThisUser = ViewBindings.findChildViewById(rootView, id);
      if (DeleteThisUser == null) {
        break missingId;
      }

      id = R.id.List_Users;
      Button ListUsers = ViewBindings.findChildViewById(rootView, id);
      if (ListUsers == null) {
        break missingId;
      }

      ConstraintLayout MainWindow = (ConstraintLayout) rootView;

      id = R.id.User_name;
      TextView UserName = ViewBindings.findChildViewById(rootView, id);
      if (UserName == null) {
        break missingId;
      }

      id = R.id.Version;
      TextView Version = ViewBindings.findChildViewById(rootView, id);
      if (Version == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, AddUser, AgeWillBe, BDayCountdown,
          Date, DeleteThisUser, ListUsers, MainWindow, UserName, Version);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
